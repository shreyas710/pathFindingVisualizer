{"version":3,"sources":["constants.js","utils.js","components/Node/Node.jsx","components/Board/Board.jsx","algorithms/Timer.js","components/Header/Header.jsx","components/NavBar/NavBar.jsx","components/HelpModal/HelpModal.jsx","algorithms/Pathfinder.js","algorithms/Dijkstra.js","algorithms/AStar.js","algorithms/BreadthFirstSearch.js","algorithms/DepthFirstSearch.js","algorithms/BidirectionalSwarm.js","algorithms/factory.js","components/Home/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["DELAY_SPEEDS","value","name","BI_BFS","ALGORITHM_TYPES","WEIGHT_MAPPING","WEIGHT_REVERSE","MARKS","label","isStartPos","posX","posY","start","x","y","isFinishPos","finish","isStartOrFinishPos","Node","props","setType","setState","type","setIsVisited","isVisited","isAnimated","setIsShortest","isShortest","forceNodeUpdate","forceUpdate","state","rowIdx","colIdx","updateNodeCache","set","this","extraClassNames","id","className","getNodeClassNames","data-row-idx","data-col-idx","getPathClassNames","React","PureComponent","Board","handlePointerDown","e","updateNodeType","drawType","target","classList","contains","Number","dataset","mode","current","handlePointerUp","handlePointerMove","realTarget","document","elementFromPoint","touches","clientX","clientY","moveNodePos","recomputeShortestPath","nodePos","prevX","prevY","get","canDragToVisualize","clearBoard","initPathfinder","pathfinder","run","window","addEventListener","removeEventListener","board","onMouseDown","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","preventDefault","map","row","key","col","Timer","callback","delay","clear","clearTimeout","Date","now","setTimeout","remaining","Header","handleVisualize","setIsVisualizing","setCanDragToVisualize","delayInterval","finalCounter","timer","timers","shift","clearTimers","push","handleClear","clearWalls","handlePause","isVisualizing","pause","setPause","resumeTimers","pauseTimers","handleSelectAlgorithm","setAlgorithmType","handleSelectSpeed","setDelayInterval","handleSelectDrawType","setDrawType","classes","algorithmType","Grid","container","justify","alignItems","spacing","wrap","grid","item","FormControl","Select","native","onChange","labelId","algorithm","center","Button","variant","color","onClick","ButtonGroup","aria-label","slider","Typography","Slider","getAriaValueText","valuetext","aria-labelledby","step","valueLabelDisplay","marks","min","max","track","withStyles","theme","marginTop","marginBottom","flex","width","minWidth","useStyles","makeStyles","separator","NavBar","handleHelpOpen","AppBar","position","elevation","Toolbar","noWrap","Link","href","underline","Tooltip","title","placement","enterDelay","arrow","IconButton","GitHub","aria-hidden","edge","Help","DialogTitle","root","padding","closeButton","right","top","palette","grey","children","onClose","other","disableTypography","DialogContent","MuiDialogContent","HelpModal","helpOpen","handleHelpClose","Dialog","open","scroll","dividers","Pathfinder","updateNodeIsVisited","updateNodeIsShortest","delayedIteration","isEmpty","traceShortestPath","timeCounter","prev","path","tempX","tempY","i","length","_init","Denque","dist","visited","j","Infinity","closed","dx","dy","Dijkstra","args","pq","TinyQueue","a","b","g","counter","pop","currentX","currentY","nextX","nextY","weight","AStar","calculateHeuristic","Math","abs","f","startF","nextF","BreadthFirstSearch","q","DepthFirstSearch","stk","flag","interSect","startInter","BidirectionalSwarm","sQueue","tQueue","sVisited","tVisited","sParent","Map","tParent","BFS1","bind","BFS2","includes","JSON","stringify","obj","parse","prevArray","st","PATHFINDER_MAPPING","Home","setupBoard","nodes","maxCol","trunc","innerWidth","maxRow","innerHeight","setHelpOpen","updateNode","updateNodeState","nodeType","forEach","Fragment","Component","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd736f9a.chunk.js","sourcesContent":["// Node Types\r\nexport const NODE_START = \"node-start\";\r\nexport const NODE_FINISH = \"node-finish\";\r\nexport const NODE_INITIAL = \"node-initial\";\r\nexport const NODE_WALL = \"node-wall\";\r\n\r\nexport const NODE_VISITED = \"node-visited\";\r\nexport const NODE_SHORTEST = \"node-shortest-path\";\r\n\r\nexport const NODE_WEIGHT_10 = \"node-weight-10\";\r\nexport const NODE_WEIGHT_20 = \"node-weight-20\";\r\nexport const NODE_WEIGHT_30 = \"node-weight-30\";\r\nexport const NODE_WEIGHT_40 = \"node-weight-40\";\r\nexport const NODE_WEIGHT_50 = \"node-weight-50\";\r\n\r\n// Delay Interval\r\nexport const DELAY_SLOW = 40;\r\nexport const DELAY_NORMAL = 20;\r\nexport const DELAY_FAST = 10;\r\n\r\nexport const DELAY_SPEEDS = [\r\n\t{ value: DELAY_SLOW, name: \"Slow\" },\r\n\t{ value: DELAY_NORMAL, name: \"Normal\" },\r\n\t{ value: DELAY_FAST, name: \"Fast\" },\r\n];\r\n\r\n// Pathfinding Algorithms\r\nexport const DIJKSTRA = \"dijkstra\";\r\nexport const A_STAR = \"a-star\";\r\nexport const BFS = \"BFS\";\r\nexport const DFS = \"DFS\";\r\nexport const BI_BFS = \"bidirectional swarm\";\r\n\r\nexport const ALGORITHM_TYPES = [\r\n\t{ value: DIJKSTRA, name: \"Dijkstra's algorithm\" },\r\n\t{ value: A_STAR, name: \"A* search\" },\r\n\t{ value: BFS, name: \"Breadth-first search\" },\r\n\t{ value: DFS, name: \"Depth-first search\" },\r\n\t{ value: BI_BFS, name: \"Bidirectional Swarm\" },\r\n];\r\n\r\n// Editing Modes\r\nexport const IDLE = \"idle\";\r\nexport const DRAGGING_START = \"dragging-start\";\r\nexport const DRAGGING_FINISH = \"dragging-finish\";\r\nexport const DRAWING = \"drawing\";\r\nexport const ERASING = \"erasing\";\r\n\r\n// Node Weight Mapping\r\nexport const WEIGHT_MAPPING = {\r\n\t[NODE_INITIAL]: 1,\r\n\t[NODE_WEIGHT_10]: 10,\r\n\t[NODE_WEIGHT_20]: 20,\r\n\t[NODE_WEIGHT_30]: 30,\r\n\t[NODE_WEIGHT_40]: 40,\r\n\t[NODE_WEIGHT_50]: 50,\r\n\t[NODE_WALL]: 60, // Conceptually Infinity\r\n};\r\n\r\n// Node Weight Reverse Mapping\r\nexport const WEIGHT_REVERSE = {};\r\nWEIGHT_REVERSE[10] = NODE_WEIGHT_10;\r\nWEIGHT_REVERSE[20] = NODE_WEIGHT_20;\r\nWEIGHT_REVERSE[30] = NODE_WEIGHT_30;\r\nWEIGHT_REVERSE[40] = NODE_WEIGHT_40;\r\nWEIGHT_REVERSE[50] = NODE_WEIGHT_50;\r\nWEIGHT_REVERSE[60] = NODE_WALL;\r\n\r\n// Marks array for weight/wall slider\r\nexport const MARKS = [\r\n\t{\r\n\t\tvalue: 10,\r\n\t\tlabel: \"10\",\r\n\t},\r\n\t{\r\n\t\tvalue: 20,\r\n\t\tlabel: \"20\",\r\n\t},\r\n\t{\r\n\t\tvalue: 30,\r\n\t\tlabel: \"30\",\r\n\t},\r\n\t{\r\n\t\tvalue: 40,\r\n\t\tlabel: \"40\",\r\n\t},\r\n\t{\r\n\t\tvalue: 50,\r\n\t\tlabel: \"50\",\r\n\t},\r\n\t{\r\n\t\tvalue: 60,\r\n\t\tlabel: \"Wall\",\r\n\t},\r\n];\r\n","export function isStartPos(posX, posY, start) {\r\n\treturn posX === start.x && posY === start.y;\r\n}\r\n\r\nexport function isFinishPos(posX, posY, finish) {\r\n\treturn posX === finish.x && posY === finish.y;\r\n}\r\n\r\nexport function isStartOrFinishPos(posX, posY, start, finish) {\r\n\treturn isStartPos(posX, posY, start) || isFinishPos(posX, posY, finish);\r\n}\r\n","import React from \"react\";\r\nimport \"./Node.css\";\r\nimport {\r\n\tNODE_INITIAL,\r\n\tNODE_SHORTEST,\r\n\tNODE_VISITED,\r\n\tNODE_START,\r\n\tNODE_FINISH,\r\n} from \"../../constants\";\r\nimport { isFinishPos, isStartPos } from \"../../utils\";\r\n\r\nexport default class Node extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttype: NODE_INITIAL,\r\n\t\t\tisVisited: false,\r\n\t\t\tisShortest: false,\r\n\t\t\tisAnimated: true,\r\n\t\t};\r\n\r\n\t\tconst { rowIdx, colIdx } = this.props;\r\n\t\tlet { updateNodeCache } = this.props;\r\n\t\tupdateNodeCache.set(`${rowIdx}-${colIdx}`, {\r\n\t\t\tsetType: this.setType,\r\n\t\t\tsetIsVisited: this.setIsVisited,\r\n\t\t\tsetIsShortest: this.setIsShortest,\r\n\t\t\tforceNodeUpdate: this.forceNodeUpdate,\r\n\t\t});\r\n\t}\r\n\r\n\t// Set state methods\r\n\tsetType = (value) => {\r\n\t\tthis.setState({ type: value });\r\n\t};\r\n\r\n\tsetIsVisited = (value) => {\r\n\t\t// console.log(value);\r\n\t\tthis.setState({ isVisited: value.isVisited, isAnimated: value.isAnimated });\r\n\t};\r\n\r\n\tsetIsShortest = (value) => {\r\n\t\tthis.setState({\r\n\t\t\tisShortest: value.isShortest,\r\n\t\t\tisAnimated: value.isAnimated,\r\n\t\t});\r\n\t};\r\n\r\n\tforceNodeUpdate = () => {\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\r\n\t// Helper methods\r\n\tgetNodeClassNames() {\r\n\t\tconst { rowIdx, colIdx, start, finish } = this.props;\r\n\t\tif (isStartPos(colIdx, rowIdx, start)) {\r\n\t\t\treturn \" \" + NODE_START;\r\n\t\t}\r\n\t\tif (isFinishPos(colIdx, rowIdx, finish)) {\r\n\t\t\treturn \" \" + NODE_FINISH;\r\n\t\t}\r\n\t\tif (this.state.type === NODE_INITIAL) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\treturn \" \" + this.state.type;\r\n\t}\r\n\r\n\tgetPathClassNames() {\r\n\t\tlet extraClassNames = \"\";\r\n\t\tif (this.state.isVisited) {\r\n\t\t\textraClassNames += \" \" + NODE_VISITED;\r\n\t\t\tif (this.state.isAnimated) {\r\n\t\t\t\textraClassNames += \" animated\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.state.isShortest) {\r\n\t\t\textraClassNames += \" \" + NODE_SHORTEST;\r\n\t\t\tif (this.state.isAnimated) {\r\n\t\t\t\textraClassNames += \" animated\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn extraClassNames;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { rowIdx, colIdx } = this.props;\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tid={`node-${rowIdx}-${colIdx}`}\r\n\t\t\t\tclassName={`board__node${this.getNodeClassNames()}`}\r\n\t\t\t\tdata-row-idx={rowIdx}\r\n\t\t\t\tdata-col-idx={colIdx}\r\n\t\t\t\t// data-type={this.state.type}\r\n\t\t\t>\r\n\t\t\t\t<div className={`board__path${this.getPathClassNames()}`} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport Node from \"../Node/Node\";\r\nimport \"./Board.css\";\r\nimport {\r\n\tIDLE,\r\n\tDRAGGING_START,\r\n\tDRAGGING_FINISH,\r\n\tDRAWING,\r\n\tERASING,\r\n\tNODE_INITIAL,\r\n} from \"../../constants\";\r\nimport { isFinishPos, isStartOrFinishPos, isStartPos } from \"../../utils\";\r\n\r\nexport default class Board extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.mode = IDLE;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.addEventListener(\"mouseup\", this.handlePointerUp);\r\n\t\twindow.addEventListener(\"touchend\", this.handlePointerUp);\r\n\t\twindow.addEventListener(\"touchcancel\", this.handlePointerUp);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener(\"mouseup\", this.handlePointerUp);\r\n\t\twindow.removeEventListener(\"touchend\", this.handlePointerUp);\r\n\t\twindow.removeEventListener(\"touchcancel\", this.handlePointerUp);\r\n\t}\r\n\r\n\t// Event handlers\r\n\thandlePointerDown = (e) => {\r\n\t\tconst { start, finish, updateNodeType, drawType } = this.props;\r\n\r\n\t\tif (!e.target.classList.contains(\"board__node\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst rowIdx = Number(e.target.dataset.rowIdx);\r\n\t\tconst colIdx = Number(e.target.dataset.colIdx);\r\n\t\tif (isStartPos(colIdx, rowIdx, start)) {\r\n\t\t\tthis.mode = DRAGGING_START;\r\n\t\t} else if (isFinishPos(colIdx, rowIdx, finish)) {\r\n\t\t\tthis.mode = DRAGGING_FINISH;\r\n\t\t} else {\r\n\t\t\t// e.target.dataset.type === NODE_INITIAL\r\n\t\t\tif (e.target.className === \"board__node\") {\r\n\t\t\t\tthis.mode = DRAWING;\r\n\t\t\t\tupdateNodeType(rowIdx, colIdx, drawType.current); // NODE_WALL\r\n\t\t\t} else {\r\n\t\t\t\tthis.mode = ERASING;\r\n\t\t\t\tupdateNodeType(rowIdx, colIdx, NODE_INITIAL);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\thandlePointerUp = () => {\r\n\t\tthis.mode = IDLE;\r\n\t};\r\n\r\n\thandlePointerMove = (e) => {\r\n\t\tlet { start, finish } = this.props;\r\n\t\tconst { updateNodeType, drawType } = this.props;\r\n\r\n\t\tconst realTarget =\r\n\t\t\te.type !== \"touchmove\"\r\n\t\t\t\t? e.target\r\n\t\t\t\t: document.elementFromPoint(e.touches[0].clientX, e.touches[0].clientY);\r\n\r\n\t\tif (!realTarget.classList.contains(\"board__node\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst rowIdx = Number(realTarget.dataset.rowIdx);\r\n\t\tconst colIdx = Number(realTarget.dataset.colIdx);\r\n\r\n\t\tswitch (this.mode) {\r\n\t\t\tcase DRAGGING_START:\r\n\t\t\t\tif (isStartOrFinishPos(colIdx, rowIdx, start, finish)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.moveNodePos(rowIdx, colIdx, start);\r\n\t\t\t\tthis.recomputeShortestPath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase DRAGGING_FINISH:\r\n\t\t\t\tif (isStartOrFinishPos(colIdx, rowIdx, start, finish)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.moveNodePos(rowIdx, colIdx, finish);\r\n\t\t\t\tthis.recomputeShortestPath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase DRAWING:\r\n\t\t\t\tupdateNodeType(rowIdx, colIdx, drawType.current); // NODE_WALL\r\n\t\t\t\tbreak;\r\n\t\t\tcase ERASING:\r\n\t\t\t\tupdateNodeType(rowIdx, colIdx, NODE_INITIAL);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\t// Helper methods\r\n\tmoveNodePos = (rowIdx, colIdx, nodePos) => {\r\n\t\tconst { updateNodeCache } = this.props;\r\n\t\tconst prevX = nodePos.x;\r\n\t\tconst prevY = nodePos.y;\r\n\t\tnodePos.y = rowIdx;\r\n\t\tnodePos.x = colIdx;\r\n\t\tupdateNodeCache.get(`${prevY}-${prevX}`).forceNodeUpdate();\r\n\t\tupdateNodeCache.get(`${rowIdx}-${colIdx}`).forceNodeUpdate();\r\n\t};\r\n\r\n\trecomputeShortestPath = () => {\r\n\t\tconst { canDragToVisualize, clearBoard, initPathfinder, pathfinder } =\r\n\t\t\tthis.props;\r\n\t\tif (canDragToVisualize.current) {\r\n\t\t\tclearBoard(false);\r\n\t\t\tinitPathfinder(false);\r\n\t\t\tpathfinder.current.run();\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { board, start, finish, updateNodeCache } = this.props;\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tid=\"board\"\r\n\t\t\t\tonMouseDown={this.handlePointerDown}\r\n\t\t\t\tonMouseMove={this.handlePointerMove}\r\n\t\t\t\tonTouchStart={this.handlePointerDown}\r\n\t\t\t\tonTouchMove={this.handlePointerMove}\r\n\t\t\t\tonTouchEnd={(e) => e.preventDefault()}>\r\n\t\t\t\t{board.map((row, rowIdx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={rowIdx} id={`row-${rowIdx}`} className=\"board__row\">\r\n\t\t\t\t\t\t\t{row.map((col, colIdx) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Node\r\n\t\t\t\t\t\t\t\t\t\tkey={`${rowIdx}-${colIdx}`}\r\n\t\t\t\t\t\t\t\t\t\trowIdx={rowIdx}\r\n\t\t\t\t\t\t\t\t\t\tcolIdx={colIdx}\r\n\t\t\t\t\t\t\t\t\t\tstart={start}\r\n\t\t\t\t\t\t\t\t\t\tfinish={finish}\r\n\t\t\t\t\t\t\t\t\t\tupdateNodeCache={updateNodeCache}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","export default class Timer {\r\n\tconstructor(callback, delay) {\r\n\t\tthis.start = Date.now();\r\n\t\tthis.id = setTimeout(callback, delay);\r\n\t\tthis.callback = callback;\r\n\t\tthis.remaining = delay;\r\n\t}\r\n\r\n\tclear = () => {\r\n\t\tclearTimeout(this.id);\r\n\t};\r\n}\r\n","import React from \"react\";\r\nimport Timer from \"../../algorithms/Timer\";\r\nimport {\r\n\tALGORITHM_TYPES,\r\n\tDELAY_SPEEDS,\r\n\tWEIGHT_MAPPING,\r\n\tWEIGHT_REVERSE,\r\n\tMARKS,\r\n\tNODE_WALL,\r\n} from \"../../constants\";\r\nimport {\r\n\tGrid,\r\n\tButton,\r\n\tButtonGroup,\r\n\tSelect,\r\n\t// InputLabel,\r\n\tFormControl,\r\n\tTypography,\r\n\tSlider,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = (theme) => ({\r\n\tgrid: {\r\n\t\tmarginTop: theme.spacing(1),\r\n\t\tmarginBottom: theme.spacing(1),\r\n\t},\r\n\tcenter: {\r\n\t\tflex: \"0 2\",\r\n\t},\r\n\tpause: { width: 40, minWidth: 40 },\r\n\tslider: { width: 200 },\r\n});\r\n\r\nclass Header extends React.PureComponent {\r\n\t// Event handlers\r\n\thandleVisualize = () => {\r\n\t\tconst {\r\n\t\t\tclearBoard,\r\n\t\t\tsetIsVisualizing,\r\n\t\t\tinitPathfinder,\r\n\t\t\tpathfinder,\r\n\t\t\tsetCanDragToVisualize,\r\n\t\t\tdelayInterval,\r\n\t\t} = this.props;\r\n\r\n\t\tclearBoard(false);\r\n\t\tsetIsVisualizing(true);\r\n\r\n\t\tinitPathfinder();\r\n\t\tconst finalCounter = pathfinder.current.run();\r\n\r\n\t\tconst timer = new Timer(\r\n\t\t\t() => {\r\n\t\t\t\tsetIsVisualizing(false);\r\n\t\t\t\tpathfinder.current.timers.shift();\r\n\t\t\t\tpathfinder.current.clearTimers();\r\n\t\t\t}, // callback\r\n\t\t\tfinalCounter * delayInterval // delay\r\n\t\t);\r\n\t\tpathfinder.current.timers.push(timer);\r\n\t\tsetCanDragToVisualize(true);\r\n\t};\r\n\r\n\thandleClear = (clearWalls) => {\r\n\t\tconst { clearBoard, setCanDragToVisualize } = this.props;\r\n\t\tclearBoard(clearWalls);\r\n\t\tsetCanDragToVisualize(false);\r\n\t};\r\n\r\n\thandlePause = () => {\r\n\t\tconst { isVisualizing, pathfinder, pause, setPause } = this.props;\r\n\t\tif (!isVisualizing) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (pause) {\r\n\t\t\tsetPause(false);\r\n\t\t\tpathfinder.current.resumeTimers();\r\n\t\t} else {\r\n\t\t\tsetPause(true);\r\n\t\t\tpathfinder.current.pauseTimers();\r\n\t\t}\r\n\t};\r\n\r\n\thandleSelectAlgorithm = (e) => {\r\n\t\tconst { setAlgorithmType } = this.props;\r\n\t\tsetAlgorithmType(e.target.value);\r\n\t};\r\n\r\n\thandleSelectSpeed = (e) => {\r\n\t\tconst { setDelayInterval } = this.props;\r\n\t\tsetDelayInterval(e.target.value);\r\n\t};\r\n\r\n\thandleSelectDrawType = (e, value) => {\r\n\t\tconst { setDrawType } = this.props;\r\n\t\tsetDrawType(WEIGHT_REVERSE[value]);\r\n\t};\r\n\r\n\tvaluetext(value) {\r\n\t\tif (value === WEIGHT_MAPPING[NODE_WALL]) return \"Wall\";\r\n\t\treturn value;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes, algorithmType, delayInterval, drawType } = this.props;\r\n\t\treturn (\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tspacing={2}\r\n\t\t\t\twrap=\"nowrap\"\r\n\t\t\t\tclassName={classes.grid}>\r\n\t\t\t\t<Grid container item justify=\"flex-end\" alignItems=\"center\" spacing={2}>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t{/* <InputLabel htmlFor=\"select-algorithm\">Algorithm</InputLabel> */}\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tnative\r\n\t\t\t\t\t\t\t\tvalue={algorithmType}\r\n\t\t\t\t\t\t\t\tonChange={this.handleSelectAlgorithm}\r\n\t\t\t\t\t\t\t\tid=\"select-algorithm\"\r\n\t\t\t\t\t\t\t\tlabelId=\"select-algorithm-label\">\r\n\t\t\t\t\t\t\t\t{ALGORITHM_TYPES.map((algorithm) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<option key={algorithm.value} value={algorithm.value}>\r\n\t\t\t\t\t\t\t\t\t\t\t{algorithm.name}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tnative\r\n\t\t\t\t\t\t\t\tvalue={delayInterval}\r\n\t\t\t\t\t\t\t\tonChange={this.handleSelectSpeed}\r\n\t\t\t\t\t\t\t\tid=\"select-speed\"\r\n\t\t\t\t\t\t\t\tlabelId=\"select-speed-label\">\r\n\t\t\t\t\t\t\t\t{DELAY_SPEEDS.map((delay) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<option key={delay.value} value={delay.value}>\r\n\t\t\t\t\t\t\t\t\t\t\t{delay.name}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\titem\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tspacing={2}\r\n\t\t\t\t\tclassName={classes.center}>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={this.handleVisualize}>\r\n\t\t\t\t\t\t\tVisualize\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\titem\r\n\t\t\t\t\tjustify=\"flex-start\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tspacing={2}>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<ButtonGroup color=\"secondary\" aria-label=\"clear button group\">\r\n\t\t\t\t\t\t\t<Button onClick={() => this.handleClear(true)}>\r\n\t\t\t\t\t\t\t\tClear Board\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button onClick={() => this.handleClear(false)}>\r\n\t\t\t\t\t\t\t\tClear Path\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<div className={classes.slider}>\r\n\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" id=\"weight-slider\">\r\n\t\t\t\t\t\t\t\tWeight\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Slider\r\n\t\t\t\t\t\t\t\tvalue={WEIGHT_MAPPING[drawType]}\r\n\t\t\t\t\t\t\t\tonChange={this.handleSelectDrawType}\r\n\t\t\t\t\t\t\t\tgetAriaValueText={this.valuetext}\r\n\t\t\t\t\t\t\t\taria-labelledby=\"weight-slider\"\r\n\t\t\t\t\t\t\t\tstep={10}\r\n\t\t\t\t\t\t\t\tvalueLabelDisplay=\"off\"\r\n\t\t\t\t\t\t\t\tmarks={MARKS}\r\n\t\t\t\t\t\t\t\tmin={10}\r\n\t\t\t\t\t\t\t\tmax={60}\r\n\t\t\t\t\t\t\t\ttrack={false}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React from \"react\";\r\nimport {\r\n\tAppBar,\r\n\tToolbar,\r\n\tTypography,\r\n\tLink,\r\n\tIconButton,\r\n\tTooltip,\r\n} from \"@material-ui/core/\";\r\nimport { GitHub, Help } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\tseparator: {\r\n\t\tflex: 1,\r\n\t},\r\n}));\r\n\r\nexport default function NavBar(props) {\r\n\tconst classes = useStyles();\r\n\tconst { handleHelpOpen } = props;\r\n\r\n\treturn (\r\n\t\t<AppBar position=\"static\" elevation={0}>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n\t\t\t\t\t<Link href=\"/pathfinding-visualizer\" color=\"inherit\" underline=\"none\">\r\n\t\t\t\t\t\tPathfinding Visualizer\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<div className={classes.separator} />\r\n\t\t\t\t<Tooltip\r\n\t\t\t\t\ttitle=\"Github\"\r\n\t\t\t\t\taria-label=\"t-github\"\r\n\t\t\t\t\tplacement=\"bottom\"\r\n\t\t\t\t\tenterDelay={250}\r\n\t\t\t\t\tarrow>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\thref=\"https://github.com/shreyas710/pathFindingVisualizer\"\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\ttarget=\"_blank\">\r\n\t\t\t\t\t\t<GitHub aria-hidden />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<Tooltip\r\n\t\t\t\t\ttitle=\"Help\"\r\n\t\t\t\t\taria-label=\"t-help\"\r\n\t\t\t\t\tplacement=\"bottom\"\r\n\t\t\t\t\tenterDelay={250}\r\n\t\t\t\t\tarrow>\r\n\t\t\t\t\t<IconButton onClick={handleHelpOpen} edge=\"end\" color=\"inherit\">\r\n\t\t\t\t\t\t<Help aria-hidden />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon aria-hidden />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nexport default function HelpModal(props) {\r\n  const { helpOpen, handleHelpClose } = props;\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleHelpClose}\r\n        aria-labelledby=\"help-dialog\"\r\n        open={helpOpen}\r\n        scroll=\"paper\"\r\n      >\r\n        <DialogTitle id=\"help-dialog\" onClose={handleHelpClose}>\r\n          Help\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography>\r\n            1. Click on the board to add and remove walls/weights. <br />\r\n            2. Click and drag the start/end nodes to move them. <br />\r\n            3. Choose the algorithm and speed from the drop-down menus. <br />\r\n            4. Choose between adding walls or weights from the slider. <br />\r\n            5. Choose the cost of the weights from the slider. <br />\r\n            6. Empty nodes &quot;cost&quot; 1 to traverse, whereas weights are\r\n            more costly to pass through. Walls are impenetrable, meaning they\r\n            cannot be traversed. <br />\r\n            7. Weighted algorithms (Djikstra and A*) will take weight nodes into\r\n            account. <br />\r\n            8. Unweighted algorithms (BFS and DFS) will ignore weight nodes\r\n            (i.e. treat the nodes as empty). <br />\r\n            9. DFS does not guarantee the shortest path, whereas the other\r\n            algorithms do. <br />\r\n            10. When the visualizer runs, it captures and uses a snapshot of the\r\n            board and configurations.\r\n          </Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import Denque from \"denque\";\r\nexport default class Pathfinder {\r\n\tconstructor(\r\n\t\tboard,\r\n\t\tstart,\r\n\t\tfinish,\r\n\t\tupdateNodeIsVisited,\r\n\t\tupdateNodeIsShortest,\r\n\t\tdelayedIteration\r\n\t) {\r\n\t\tthis.start = start;\r\n\t\tthis.finish = finish;\r\n\t\tthis.updateNodeIsVisited = updateNodeIsVisited;\r\n\t\tthis.updateNodeIsShortest = updateNodeIsShortest;\r\n\t\tthis.delayedIteration = delayedIteration;\r\n\t\tthis._init(board);\r\n\t\tthis.timers = new Denque();\r\n\t}\r\n\r\n\tstatic dx = [0, 0, -1, 1];\r\n\tstatic dy = [-1, 1, 0, 0];\r\n\r\n\t_init(board) {\r\n\t\tthis.board = [];\r\n\t\tthis.dist = [];\r\n\t\tthis.visited = [];\r\n\t\tthis.prev = [];\r\n\t\tfor (let i = 0; i < board.length; ++i) {\r\n\t\t\tthis.board[i] = [];\r\n\t\t\tthis.dist[i] = [];\r\n\t\t\tthis.visited[i] = [];\r\n\t\t\tthis.prev[i] = [];\r\n\t\t\tfor (let j = 0; j < board[i].length; ++j) {\r\n\t\t\t\tthis.board[i][j] = { type: board[i][j].type };\r\n\t\t\t\tthis.dist[i][j] = Infinity;\r\n\t\t\t\tthis.visited[i][j] = false;\r\n\t\t\t\tthis.prev[i][j] = { x: -1, y: -1 };\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.closed = this.visited;\r\n\t}\r\n\r\n\tclearTimers = () => {\r\n\t\twhile (!this.timers.isEmpty()) {\r\n\t\t\tlet timer = this.timers.shift();\r\n\t\t\ttimer.clear();\r\n\t\t}\r\n\t\tthis.timers.clear();\r\n\t};\r\n\r\n\t// returns latest timeCounter\r\n\ttraceShortestPath = (timeCounter) => {\r\n\t\tconst { finish, prev, updateNodeIsShortest, delayedIteration } = this;\r\n\r\n\t\tconst path = [];\r\n\t\tlet { x, y } = prev[finish.y][finish.x];\r\n\r\n\t\twhile (prev[y][x].x !== -1 && prev[y][x].y !== -1) {\r\n\t\t\tpath.push({ x, y });\r\n\t\t\tconst tempX = x;\r\n\t\t\tconst tempY = y;\r\n\t\t\tx = prev[tempY][tempX].x;\r\n\t\t\ty = prev[tempY][tempX].y;\r\n\t\t}\r\n\r\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\r\n\t\t\tx = path[i].x;\r\n\t\t\ty = path[i].y;\r\n\r\n\t\t\t//timeCounter is 0 if delayedIteration is false\r\n\t\t\tupdateNodeIsShortest(\r\n\t\t\t\ty,\r\n\t\t\t\tx,\r\n\t\t\t\ttrue,\r\n\t\t\t\ttimeCounter * delayedIteration,\r\n\t\t\t\tdelayedIteration\r\n\t\t\t);\r\n\t\t\ttimeCounter += 1;\r\n\t\t}\r\n\t\treturn timeCounter;\r\n\t};\r\n}\r\n","import TinyQueue from 'tinyqueue';\r\nimport Pathfinder from './Pathfinder';\r\nimport { NODE_WALL, WEIGHT_MAPPING } from '../constants';\r\n\r\nexport default class Dijkstra extends Pathfinder {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.pq = new TinyQueue([], function (a, b) {\r\n      return a.g - b.g;\r\n    });\r\n  }\r\n\r\n  // Dijkstra is a variant of A* where the heuristic is zero\r\n  run() {\r\n    const {\r\n      pq,\r\n      dist,\r\n      closed,\r\n      prev,\r\n      board,\r\n      start,\r\n      finish,\r\n      updateNodeIsVisited,\r\n      delayedIteration,\r\n    } = this;\r\n\r\n    let counter = 0;\r\n    if (start.x === finish.x && start.y === finish.y) {\r\n      return counter;\r\n    }\r\n\r\n    pq.push({ x: start.x, y: start.y, g: 0 });\r\n    dist[start.y][start.x] = 0;\r\n\r\n    while (pq.length) {\r\n      const current = pq.pop();\r\n      const currentX = current.x;\r\n      const currentY = current.y;\r\n\r\n      if (closed[currentY][currentX]) {\r\n        continue;\r\n      }\r\n      // Increment counter unless start node\r\n      if (!(currentX === start.x && currentY === start.y)) counter += 1;\r\n      closed[currentY][currentX] = true;\r\n      if (currentX === finish.x && currentY === finish.y) {\r\n        return this.traceShortestPath(counter);\r\n      }\r\n      // Don't visually update node-visited for start/finish nodes\r\n      if (!(currentX === start.x && currentY === start.y)) {\r\n        updateNodeIsVisited(\r\n          currentY,\r\n          currentX,\r\n          true,\r\n          counter * delayedIteration,\r\n          delayedIteration\r\n        );\r\n      }\r\n\r\n      for (let i = 0; i < Pathfinder.dx.length; ++i) {\r\n        const nextX = currentX + Pathfinder.dx[i];\r\n        const nextY = currentY + Pathfinder.dy[i];\r\n        if (\r\n          nextX < 0 ||\r\n          nextX >= board[0].length ||\r\n          nextY < 0 ||\r\n          nextY >= board.length\r\n        ) {\r\n          continue;\r\n        }\r\n        if (closed[nextY][nextX]) {\r\n          continue;\r\n        }\r\n        if (\r\n          board[nextY][nextX].type === NODE_WALL &&\r\n          !(nextX === finish.x && nextY === finish.y)\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        const weight = !(nextX === finish.x && nextY === finish.y)\r\n          ? WEIGHT_MAPPING[board[nextY][nextX].type]\r\n          : 1;\r\n        const g = dist[currentY][currentX] + weight;\r\n        // if there is a shorter path to nextPos\r\n        if (g < dist[nextY][nextX]) {\r\n          dist[nextY][nextX] = g;\r\n          prev[nextY][nextX] = { x: currentX, y: currentY };\r\n          pq.push({ x: nextX, y: nextY, g });\r\n        }\r\n      }\r\n    }\r\n    return counter;\r\n  }\r\n}\r\n","import TinyQueue from \"tinyqueue\";\r\nimport Pathfinder from \"./Pathfinder\";\r\nimport { NODE_WALL, WEIGHT_MAPPING } from \"../constants\";\r\n\r\nexport default class AStar extends Pathfinder {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\t\tthis.pq = new TinyQueue([], function (a, b) {\r\n\t\t\treturn a.f - b.f;\r\n\t\t});\r\n\t}\r\n\r\n\t// Manhattan distance\r\n\tcalculateHeuristic = (posX, posY) => {\r\n\t\treturn Math.abs(posX - this.finish.x) + Math.abs(posY - this.finish.y);\r\n\t};\r\n\r\n\trun() {\r\n\t\tconst {\r\n\t\t\tpq,\r\n\t\t\tdist,\r\n\t\t\tclosed,\r\n\t\t\tprev,\r\n\t\t\tboard,\r\n\t\t\tstart,\r\n\t\t\tfinish,\r\n\t\t\tupdateNodeIsVisited,\r\n\t\t\tdelayedIteration,\r\n\t\t\tcalculateHeuristic,\r\n\t\t} = this;\r\n\r\n\t\tlet counter = 0;\r\n\t\tif (start.x === finish.x && start.y === finish.y) {\r\n\t\t\treturn counter;\r\n\t\t}\r\n\r\n\t\t// f = g + h, initial g is 0\r\n\t\tconst startF = calculateHeuristic(start.x, start.y);\r\n\t\tpq.push({ x: start.x, y: start.y, f: startF });\r\n\t\tdist[start.y][start.x] = 0;\r\n\r\n\t\twhile (pq.length) {\r\n\t\t\tconst current = pq.pop();\r\n\t\t\tconst currentX = current.x;\r\n\t\t\tconst currentY = current.y;\r\n\r\n\t\t\tif (closed[currentY][currentX]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// Increment counter unless start node\r\n\t\t\tif (!(currentX === start.x && currentY === start.y)) counter += 1;\r\n\t\t\tclosed[currentY][currentX] = true;\r\n\t\t\tif (currentX === finish.x && currentY === finish.y) {\r\n\t\t\t\treturn this.traceShortestPath(counter);\r\n\t\t\t}\r\n\t\t\t// Don't visually update node-visited for start/finish nodes\r\n\t\t\tif (!(currentX === start.x && currentY === start.y)) {\r\n\t\t\t\tupdateNodeIsVisited(\r\n\t\t\t\t\tcurrentY,\r\n\t\t\t\t\tcurrentX,\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t\tcounter * delayedIteration,\r\n\t\t\t\t\tdelayedIteration\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < Pathfinder.dx.length; ++i) {\r\n\t\t\t\tconst nextX = currentX + Pathfinder.dx[i];\r\n\t\t\t\tconst nextY = currentY + Pathfinder.dy[i];\r\n\t\t\t\tif (\r\n\t\t\t\t\tnextX < 0 ||\r\n\t\t\t\t\tnextX >= board[0].length ||\r\n\t\t\t\t\tnextY < 0 ||\r\n\t\t\t\t\tnextY >= board.length\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (closed[nextY][nextX]) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\tboard[nextY][nextX].type === NODE_WALL &&\r\n\t\t\t\t\t!(nextX === finish.x && nextY === finish.y)\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst weight = !(nextX === finish.x && nextY === finish.y)\r\n\t\t\t\t\t? WEIGHT_MAPPING[board[nextY][nextX].type]\r\n\t\t\t\t\t: 1;\r\n\t\t\t\tconst g = dist[currentY][currentX] + weight;\r\n\t\t\t\t// f = g + h\r\n\t\t\t\tconst nextF = g + calculateHeuristic(nextX, nextY);\r\n\t\t\t\t// if there is a shorter path to nextPos\r\n\t\t\t\tif (g < dist[nextY][nextX]) {\r\n\t\t\t\t\tdist[nextY][nextX] = g;\r\n\t\t\t\t\tprev[nextY][nextX] = { x: currentX, y: currentY };\r\n\t\t\t\t\tpq.push({ x: nextX, y: nextY, f: nextF });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn counter;\r\n\t}\r\n}\r\n","import Denque from \"denque\";\r\nimport Pathfinder from \"./Pathfinder\";\r\nimport { NODE_WALL } from \"../constants\";\r\n\r\nexport default class BreadthFirstSearch extends Pathfinder {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\t\tthis.q = new Denque();\r\n\t}\r\n\r\n\trun() {\r\n\t\tconst {\r\n\t\t\tq,\r\n\t\t\tvisited,\r\n\t\t\tprev,\r\n\t\t\tboard,\r\n\t\t\tstart,\r\n\t\t\tfinish,\r\n\t\t\tupdateNodeIsVisited,\r\n\t\t\tdelayedIteration,\r\n\t\t} = this;\r\n\r\n\t\tlet counter = 0;\r\n\t\tif (start.x === finish.x && start.y === finish.y) {\r\n\t\t\treturn counter;\r\n\t\t}\r\n\r\n\t\tq.push({ x: start.x, y: start.y });\r\n\t\tvisited[start.y][start.x] = true;\r\n\t\twhile (!q.isEmpty()) {\r\n\t\t\tconst current = q.shift();\r\n\r\n\t\t\tfor (let i = 0; i < Pathfinder.dx.length; ++i) {\r\n\t\t\t\tconst nextX = current.x + Pathfinder.dx[i];\r\n\t\t\t\tconst nextY = current.y + Pathfinder.dy[i];\r\n\t\t\t\tif (\r\n\t\t\t\t\tnextX < 0 ||\r\n\t\t\t\t\tnextX >= board[0].length ||\r\n\t\t\t\t\tnextY < 0 ||\r\n\t\t\t\t\tnextY >= board.length\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (visited[nextY][nextX]) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\tboard[nextY][nextX].type === NODE_WALL &&\r\n\t\t\t\t\t!(nextX === finish.x && nextY === finish.y)\r\n\t\t\t\t) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcounter += 1;\r\n\t\t\t\tvisited[nextY][nextX] = true;\r\n\t\t\t\tprev[nextY][nextX] = { x: current.x, y: current.y };\r\n\t\t\t\tif (nextX === finish.x && nextY === finish.y) {\r\n\t\t\t\t\treturn this.traceShortestPath(counter);\r\n\t\t\t\t}\r\n\t\t\t\tupdateNodeIsVisited(\r\n\t\t\t\t\tnextY,\r\n\t\t\t\t\tnextX,\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t\tcounter * delayedIteration,\r\n\t\t\t\t\tdelayedIteration\r\n\t\t\t\t);\r\n\r\n\t\t\t\tq.push({ x: nextX, y: nextY });\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn counter;\r\n\t}\r\n}\r\n","import Denque from 'denque';\r\nimport Pathfinder from './Pathfinder';\r\nimport { NODE_WALL } from '../constants';\r\n\r\nexport default class DepthFirstSearch extends Pathfinder {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.stk = new Denque();\r\n  }\r\n\r\n  run() {\r\n    const {\r\n      stk,\r\n      visited,\r\n      prev,\r\n      board,\r\n      start,\r\n      finish,\r\n      updateNodeIsVisited,\r\n      delayedIteration,\r\n    } = this;\r\n\r\n    let counter = 0;\r\n    if (start.x === finish.x && start.y === finish.y) {\r\n      return counter;\r\n    }\r\n\r\n    stk.push({ x: start.x, y: start.y });\r\n    while (!stk.isEmpty()) {\r\n      const current = stk.pop();\r\n      const currentX = current.x;\r\n      const currentY = current.y;\r\n\r\n      if (visited[currentY][currentX]) {\r\n        continue;\r\n      }\r\n      // Increment counter unless start node\r\n      if (!(currentX === start.x && currentY === start.y)) counter += 1;\r\n      visited[currentY][currentX] = true;\r\n      if (currentX === finish.x && currentY === finish.y) {\r\n        return this.traceShortestPath(counter);\r\n      }\r\n      // Don't visually update node-visited for start/finish nodes\r\n      if (!(currentX === start.x && currentY === start.y)) {\r\n        updateNodeIsVisited(\r\n          currentY,\r\n          currentX,\r\n          true,\r\n          counter * delayedIteration,\r\n          delayedIteration\r\n        );\r\n      }\r\n\r\n      for (let i = 0; i < Pathfinder.dx.length; ++i) {\r\n        const nextX = current.x + Pathfinder.dx[i];\r\n        const nextY = current.y + Pathfinder.dy[i];\r\n        if (\r\n          nextX < 0 ||\r\n          nextX >= board[0].length ||\r\n          nextY < 0 ||\r\n          nextY >= board.length\r\n        ) {\r\n          continue;\r\n        }\r\n        if (visited[nextY][nextX]) {\r\n          continue;\r\n        }\r\n        if (\r\n          board[nextY][nextX].type === NODE_WALL &&\r\n          !(nextX === finish.x && nextY === finish.y)\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        prev[nextY][nextX] = { x: current.x, y: current.y };\r\n        stk.push({ x: nextX, y: nextY });\r\n      }\r\n    }\r\n    return counter;\r\n  }\r\n}\r\n","/* eslint-disable consistent-return */\r\nimport Denque from \"denque\";\r\nimport Pathfinder from \"./Pathfinder\";\r\nimport { NODE_WALL } from \"../constants\";\r\n\r\nlet flag = 0;\r\nlet interSect = {};\r\nlet startInter = {};\r\n\r\nexport default class BidirectionalSwarm extends Pathfinder {\r\n\tconstructor(...args) {\r\n\t\tsuper(...args);\r\n\t\tthis.sQueue = new Denque();\r\n\t\tthis.tQueue = new Denque();\r\n\t\tthis.sVisited = [];\r\n\t\tthis.tVisited = [];\r\n\t\tthis.sParent = new Map();\r\n\t\tthis.tParent = new Map();\r\n\t\tthis.path = [];\r\n\t\tthis.BFS1 = this.BFS1.bind(this);\r\n\t\tthis.BFS2 = this.BFS2.bind(this);\r\n\t}\r\n\r\n\tBFS1() {\r\n\t\tconst { sQueue, visited, sVisited, tVisited, sParent, prev, board } = this;\r\n\t\tlet current = sQueue.shift();\r\n\t\tfor (let i = 0; i < Pathfinder.dx.length; ++i) {\r\n\t\t\tconst nextX = current.x + Pathfinder.dx[i];\r\n\t\t\tconst nextY = current.y + Pathfinder.dy[i];\r\n\t\t\tif (\r\n\t\t\t\tnextX < 0 ||\r\n\t\t\t\tnextX >= board[0].length ||\r\n\t\t\t\tnextY < 0 ||\r\n\t\t\t\tnextY >= board.length\r\n\t\t\t) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (board[nextY][nextX].type === NODE_WALL) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (tVisited.includes(JSON.stringify({ x: nextX, y: nextY }))) {\r\n\t\t\t\tstartInter = current;\r\n\t\t\t\tinterSect = {\r\n\t\t\t\t\tx: nextX,\r\n\t\t\t\t\ty: nextY,\r\n\t\t\t\t};\r\n\t\t\t\tflag = 1;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (visited[nextY][nextX]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tvisited[nextY][nextX] = true;\r\n\t\t\tsVisited.push(JSON.stringify({ x: nextX, y: nextY }));\r\n\t\t\tprev[nextY][nextX] = { x: current.x, y: current.y };\r\n\t\t\tsParent.set({ x: nextX, y: nextY }, current);\r\n\t\t\tsQueue.push({ x: nextX, y: nextY });\r\n\t\t}\r\n\t}\r\n\r\n\tBFS2() {\r\n\t\tconst { tQueue, visited, sVisited, tVisited, tParent, prev, board } = this;\r\n\t\tlet current = tQueue.shift();\r\n\r\n\t\tfor (let i = 0; i < Pathfinder.dx.length; ++i) {\r\n\t\t\tconst nextX = current.x + Pathfinder.dx[i];\r\n\t\t\tconst nextY = current.y + Pathfinder.dy[i];\r\n\t\t\tif (\r\n\t\t\t\tnextX < 0 ||\r\n\t\t\t\tnextX >= board[0].length ||\r\n\t\t\t\tnextY < 0 ||\r\n\t\t\t\tnextY >= board.length\r\n\t\t\t) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (board[nextY][nextX].type === NODE_WALL) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (sVisited.includes(JSON.stringify({ x: nextX, y: nextY }))) {\r\n\t\t\t\tinterSect = current;\r\n\t\t\t\tstartInter = {\r\n\t\t\t\t\tx: nextX,\r\n\t\t\t\t\ty: nextY,\r\n\t\t\t\t};\r\n\t\t\t\tflag = 1;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (visited[nextY][nextX]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tvisited[nextY][nextX] = true;\r\n\t\t\ttVisited.push(JSON.stringify({ x: nextX, y: nextY }));\r\n\t\t\tprev[nextY][nextX] = { x: current.x, y: current.y };\r\n\t\t\ttParent.set({ x: nextX, y: nextY }, current);\r\n\r\n\t\t\ttQueue.push({ x: nextX, y: nextY });\r\n\t\t}\r\n\t}\r\n\r\n\trun() {\r\n\t\tconst {\r\n\t\t\tsQueue,\r\n\t\t\ttQueue,\r\n\t\t\tsVisited,\r\n\t\t\ttVisited,\r\n\t\t\tsParent,\r\n\t\t\ttParent,\r\n\t\t\tstart,\r\n\t\t\tfinish,\r\n\t\t\tupdateNodeIsVisited,\r\n\t\t\tdelayedIteration,\r\n\t\t\tprev,\r\n\t\t\tvisited,\r\n\t\t} = this;\r\n\r\n\t\tlet counter = 0;\r\n\t\tflag = 0;\r\n\t\tinterSect = {};\r\n\t\tstartInter = {};\r\n\r\n\t\tif (start.x === finish.x && start.y === finish.y) {\r\n\t\t\treturn counter;\r\n\t\t}\r\n\r\n\t\tsQueue.push(start);\r\n\t\tsVisited.push(JSON.stringify(start));\r\n\t\tsParent.set(start, -1);\r\n\t\ttQueue.push(finish);\r\n\t\ttVisited.push(JSON.stringify(finish));\r\n\t\ttParent.set(finish, -1);\r\n\t\tvisited[start.y][start.x] = true;\r\n\t\tvisited[finish.y][finish.x] = true;\r\n\t\twhile (sQueue.length && tQueue.length) {\r\n\t\t\tthis.BFS1();\r\n\t\t\tthis.BFS2();\r\n\r\n\t\t\tif (flag === 1) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (\r\n\t\t\tlet i = 0;\r\n\t\t\ti <= Math.max(sVisited.length - 1, tVisited.length - 1);\r\n\t\t\ti++\r\n\t\t) {\r\n\t\t\tif (i <= sVisited.length - 1) {\r\n\t\t\t\tlet obj = JSON.parse(sVisited[i]);\r\n\t\t\t\tif (\r\n\t\t\t\t\t(obj.x === start.x && obj.y === start.y) ||\r\n\t\t\t\t\t(obj.x === finish.x && obj.y === finish.y)\r\n\t\t\t\t)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tupdateNodeIsVisited(\r\n\t\t\t\t\tobj.y,\r\n\t\t\t\t\tobj.x,\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t\tcounter * delayedIteration,\r\n\t\t\t\t\tdelayedIteration\r\n\t\t\t\t);\r\n\t\t\t\tcounter += 1;\r\n\t\t\t}\r\n\t\t\tif (i <= tVisited.length - 1) {\r\n\t\t\t\tlet obj = JSON.parse(tVisited[i]);\r\n\t\t\t\tif (\r\n\t\t\t\t\t(obj.x === start.x && obj.y === start.y) ||\r\n\t\t\t\t\t(obj.x === finish.x && obj.y === finish.y)\r\n\t\t\t\t)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tupdateNodeIsVisited(\r\n\t\t\t\t\tobj.y,\r\n\t\t\t\t\tobj.x,\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t\tcounter * delayedIteration,\r\n\t\t\t\t\tdelayedIteration\r\n\t\t\t\t);\r\n\t\t\t\tcounter += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (flag === 0) return counter;\r\n\t\tlet prevArray = [];\r\n\r\n\t\tlet st = interSect;\r\n\t\twhile (st.x !== -1) {\r\n\t\t\tprevArray.push(st);\r\n\t\t\tst = prev[st.y][st.x];\r\n\t\t}\r\n\r\n\t\tst = finish;\r\n\t\tlet i = prevArray.length - 2;\r\n\t\twhile (!(st.x === interSect.x && st.y === interSect.y)) {\r\n\t\t\tprev[st.y][st.x] = prevArray[i];\r\n\t\t\ti--;\r\n\t\t\tst = prev[st.y][st.x];\r\n\t\t}\r\n\t\tprev[interSect.y][interSect.x] = startInter;\r\n\r\n\t\treturn this.traceShortestPath(counter);\r\n\t}\r\n}\r\n","import Dijkstra from \"./Dijkstra\";\r\nimport AStar from \"./AStar\";\r\nimport BreadthFirstSearch from \"./BreadthFirstSearch\";\r\nimport DepthFirstSearch from \"./DepthFirstSearch\";\r\nimport BidirectionalSwarm from \"./BidirectionalSwarm\";\r\nimport { DIJKSTRA, A_STAR, BFS, DFS, BI_BFS } from \"../constants\";\r\n\r\nconst PATHFINDER_MAPPING = {\r\n\t[DIJKSTRA]: Dijkstra,\r\n\t[A_STAR]: AStar,\r\n\t[BFS]: BreadthFirstSearch,\r\n\t[DFS]: DepthFirstSearch,\r\n\t[BI_BFS]: BidirectionalSwarm,\r\n};\r\n\r\nexport default PATHFINDER_MAPPING;\r\n","import React, { Component } from \"react\";\r\nimport Board from \"../Board/Board\";\r\nimport Header from \"../Header/Header\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport HelpModal from \"../HelpModal/HelpModal\";\r\nimport { NODE_INITIAL, NODE_WALL, DIJKSTRA, DELAY_FAST } from \"../../constants\";\r\nimport Timer from \"../../algorithms/Timer\";\r\nimport PATHFINDER_MAPPING from \"../../algorithms/factory\";\r\n\r\nexport default class Home extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.board = [];\r\n\t\tthis.updateNodeCache = new Map();\r\n\t\tthis.pathfinder = {};\r\n\r\n\t\tthis.canDragToVisualize = { current: false };\r\n\t\tthis.drawType = { current: NODE_WALL };\r\n\t\tthis.state = {\r\n\t\t\tisVisualizing: false,\r\n\t\t\thelpOpen: false,\r\n\t\t\tdelayInterval: DELAY_FAST,\r\n\t\t\talgorithmType: DIJKSTRA,\r\n\t\t\tpause: false,\r\n\t\t\tdrawType: NODE_WALL,\r\n\t\t};\r\n\t\tthis.setupBoard();\r\n\t}\r\n\r\n\t// public class fields syntax\r\n\tsetupBoard = () => {\r\n\t\tconst nodes = [];\r\n\t\t// Change rows and cols depending on the device width\r\n\t\tconst maxCol = Math.trunc(window.innerWidth / 25);\r\n\t\tconst maxRow = Math.trunc(window.innerHeight / 35);\r\n\r\n\t\tthis.start = {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t};\r\n\t\tthis.finish = {\r\n\t\t\tx: maxCol-1,\r\n\t\t\ty: maxRow-1,\r\n\t\t};\r\n\r\n\t\t// Initialize board\r\n\t\tfor (let rowIdx = 0; rowIdx < maxRow; ++rowIdx) {\r\n\t\t\tnodes[rowIdx] = [];\r\n\t\t\tfor (let colIdx = 0; colIdx < maxCol; ++colIdx) {\r\n\t\t\t\tnodes[rowIdx][colIdx] = {\r\n\t\t\t\t\ttype: NODE_INITIAL,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.board = nodes;\r\n\t};\r\n\r\n\t// Set state methods\r\n\tsetIsVisualizing = (value) => {\r\n\t\tthis.setState({ isVisualizing: value });\r\n\t};\r\n\r\n\tsetCanDragToVisualize = (value) => {\r\n\t\tthis.canDragToVisualize.current = value;\r\n\t};\r\n\r\n\tsetAlgorithmType = (value) => {\r\n\t\tthis.setState({ algorithmType: value });\r\n\t};\r\n\r\n\tsetDelayInterval = (value) => {\r\n\t\tthis.setState({ delayInterval: Number(value) });\r\n\t};\r\n\r\n\tsetPause = (value) => {\r\n\t\tthis.setState({ pause: value });\r\n\t};\r\n\r\n\tsetDrawType = (value) => {\r\n\t\tthis.drawType.current = value;\r\n\t\tthis.setState({ drawType: value });\r\n\t};\r\n\r\n\tsetHelpOpen = (value) => {\r\n\t\tthis.setState({ helpOpen: value });\r\n\t};\r\n\r\n\t// Update node state methods\r\n\tupdateNode = (value, updateNodeState, timeCounter) => {\r\n\t\tif (timeCounter) {\r\n\t\t\tconst timer = new Timer(\r\n\t\t\t\t() => {\r\n\t\t\t\t\t// console.log(value);\r\n\t\t\t\t\tupdateNodeState(value);\r\n\t\t\t\t\tthis.pathfinder.current.timers.shift();\r\n\t\t\t\t}, // callback\r\n\t\t\t\ttimeCounter * this.state.delayInterval // delay\r\n\t\t\t);\r\n\t\t\tthis.pathfinder.current.timers.push(timer);\r\n\t\t} else {\r\n\t\t\tupdateNodeState(value);\r\n\t\t}\r\n\t};\r\n\r\n\tupdateNodeType = (\r\n\t\trowIdx,\r\n\t\tcolIdx,\r\n\t\tnodeType = NODE_INITIAL,\r\n\t\ttimeCounter = 0\r\n\t) => {\r\n\t\tthis.board[rowIdx][colIdx].type = nodeType;\r\n\t\tconst setType = this.updateNodeCache.get(`${rowIdx}-${colIdx}`).setType;\r\n\t\tthis.updateNode(nodeType, setType, timeCounter);\r\n\t};\r\n\r\n\tupdateNodeIsVisited = (\r\n\t\trowIdx,\r\n\t\tcolIdx,\r\n\t\tisVisited = false,\r\n\t\ttimeCounter = 0,\r\n\t\tisAnimated = true\r\n\t) => {\r\n\t\tconst setIsVisited = this.updateNodeCache.get(\r\n\t\t\t`${rowIdx}-${colIdx}`\r\n\t\t).setIsVisited;\r\n\t\tthis.updateNode({ isVisited, isAnimated }, setIsVisited, timeCounter);\r\n\t};\r\n\r\n\tupdateNodeIsShortest = (\r\n\t\trowIdx,\r\n\t\tcolIdx,\r\n\t\tisShortest = false,\r\n\t\ttimeCounter = 0,\r\n\t\tisAnimated = true\r\n\t) => {\r\n\t\tconst setIsShortest = this.updateNodeCache.get(\r\n\t\t\t`${rowIdx}-${colIdx}`\r\n\t\t).setIsShortest;\r\n\t\tthis.updateNode({ isShortest, isAnimated }, setIsShortest, timeCounter);\r\n\t};\r\n\r\n\t// Helper methods\r\n\tclearBoard = (clearWalls = true) => {\r\n\t\tif (this.pathfinder.current) {\r\n\t\t\tthis.pathfinder.current.clearTimers();\r\n\t\t}\r\n\r\n\t\tthis.board.forEach((row, rowIdx) => {\r\n\t\t\trow.forEach((col, colIdx) => {\r\n\t\t\t\t// clear walls/weights\r\n\t\t\t\tif (clearWalls) {\r\n\t\t\t\t\tthis.updateNodeType(rowIdx, colIdx, NODE_INITIAL);\r\n\t\t\t\t}\r\n\t\t\t\t// clear path\r\n\t\t\t\tthis.updateNodeIsVisited(rowIdx, colIdx, false);\r\n\t\t\t\tthis.updateNodeIsShortest(rowIdx, colIdx, false);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.setIsVisualizing(false);\r\n\t\tthis.setState({ pause: false });\r\n\t};\r\n\r\n\tinitPathfinder = (delayedIteration = true) => {\r\n\t\tthis.pathfinder.current = new PATHFINDER_MAPPING[this.state.algorithmType](\r\n\t\t\tthis.board,\r\n\t\t\tthis.start,\r\n\t\t\tthis.finish,\r\n\t\t\tthis.updateNodeIsVisited,\r\n\t\t\tthis.updateNodeIsShortest,\r\n\t\t\tdelayedIteration\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<NavBar handleHelpOpen={() => this.setHelpOpen(true)} />\r\n\t\t\t\t<HelpModal\r\n\t\t\t\t\thelpOpen={this.state.helpOpen}\r\n\t\t\t\t\thandleHelpClose={() => this.setHelpOpen(false)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tisVisualizing={this.state.isVisualizing}\r\n\t\t\t\t\tdelayInterval={this.state.delayInterval}\r\n\t\t\t\t\talgorithmType={this.state.algorithmType}\r\n\t\t\t\t\tpause={this.state.pause}\r\n\t\t\t\t\tdrawType={this.state.drawType}\r\n\t\t\t\t\tpathfinder={this.pathfinder}\r\n\t\t\t\t\tsetIsVisualizing={this.setIsVisualizing}\r\n\t\t\t\t\tsetCanDragToVisualize={this.setCanDragToVisualize}\r\n\t\t\t\t\tsetDelayInterval={this.setDelayInterval}\r\n\t\t\t\t\tsetAlgorithmType={this.setAlgorithmType}\r\n\t\t\t\t\tsetPause={this.setPause}\r\n\t\t\t\t\tsetDrawType={this.setDrawType}\r\n\t\t\t\t\tclearBoard={this.clearBoard}\r\n\t\t\t\t\tinitPathfinder={this.initPathfinder}\r\n\t\t\t\t/>\r\n\t\t\t\t<Board\r\n\t\t\t\t\tboard={this.board}\r\n\t\t\t\t\tcanDragToVisualize={this.canDragToVisualize}\r\n\t\t\t\t\tdrawType={this.drawType}\r\n\t\t\t\t\tupdateNodeType={this.updateNodeType}\r\n\t\t\t\t\tstart={this.start}\r\n\t\t\t\t\tfinish={this.finish}\r\n\t\t\t\t\tupdateNodeCache={this.updateNodeCache}\r\n\t\t\t\t\tpathfinder={this.pathfinder}\r\n\t\t\t\t\tclearBoard={this.clearBoard}\r\n\t\t\t\t\tinitPathfinder={this.initPathfinder}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport Home from \"./components/Home/Home\";\r\n\r\nfunction App() {\r\n\treturn <Home />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '@fontsource/roboto';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}